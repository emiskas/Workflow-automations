========================================
Django Watcher Setup (with Gunicorn Restart)
========================================

This automation watches a Django project directory for changes to Python files.
When a file changes, it automatically restarts the Gunicorn service.
Installed as a systemd service, it runs in the background, persists through logouts,
and survives reboots.

----------------------------------------
DISCLAIMER
----------------------------------------
- Grants the configured user passwordless sudo access to restart Gunicorn.
- Will restart Gunicorn whenever a Python file is saved in the watched directory.
- Do not broaden the sudoers entry beyond the exact Gunicorn restart command.
- Keep the watcher script owned by your user (not world-writable).
- Frequent file changes (e.g. migrations, git pulls) will trigger repeated restarts.
- Test on staging before deploying to production.

----------------------------------------
SETUP
----------------------------------------

1. Open the terminal from the directory of this instructions file.

2. Upload the script into the VPS userâ€™s home directory:
   scp watcher.sh user@your-vps:/home/user/

3. Log into your VPS and make the script executable:
   ssh user@your-vps
   # Run after logging in
   chmod +x /home/youruser/watcher.sh

3. Install dependencies:
   sudo apt update && sudo apt install -y inotify-tools

4. Allow user to restart Gunicorn without password:
   sudo visudo
   # Add this line:
   youruser ALL=(ALL) NOPASSWD: /bin/systemctl restart gunicorn

5. Create the systemd service:
   sudo nano /etc/systemd/system/watcher.service

   # Paste this block:
   [Unit]
   Description=Inotify Watcher for Django Projects
   After=network.target

   [Service]
   User=youruser
   ExecStart=/home/youruser/watcher.sh
   Restart=always

   [Install]
   WantedBy=multi-user.target

6. Enable and start the service:
   sudo systemctl daemon-reload
   sudo systemctl enable watcher.service
   sudo systemctl start watcher.service

7. View logs:
   journalctl -u watcher.service -f

----------------------------------------
END
----------------------------------------
